<?xml version="1.0"?>
<launch>
    <!-- general args -->
    <arg name="publish_tf" default="true"/>
    <arg name="tags_file"/>

    <!-- Camera 1 -->
    <arg name="camera_name_1" default="usb_cam_1"/>
    <include file="$(find depthai_ros_driver)/launch/camera.launch">
        <arg name="enable_depth" value="false"/>
        <arg name="rectify_rgb" value="true"/>
        <arg name="rgb_camera_color_profile" value="1920,1080,30"/>
        <arg name="name" value="$(arg camera_name_1)"/>
        <arg name="params_file" value="$(find camera_test)/config/usb_cam_1.yaml"/>
    </include>
    <include file="$(find camera_test)/launch/continuous_detection.launch">
        <arg name="camera_name"  value="$(arg camera_name_1)"/>
        <arg name="camera_frame" value="$(arg camera_name_1)"/>
        <arg name="publish_tf"   value="$(arg publish_tf)"/>
        <arg name="tags_file"    value="$(arg tags_file)"/>
    </include>

    <!-- Camera 2 -->
    <arg name="camera_name_2" default="usb_cam_2"/>
    <include file="$(find depthai_ros_driver)/launch/camera.launch">
        <arg name="enable_depth" value="false"/>
        <arg name="rectify_rgb" value="true"/>
        <arg name="rgb_camera_color_profile" value="1920,1080,30"/>
        <arg name="name" value="$(arg camera_name_2)"/>
        <arg name="params_file" value="$(find camera_test)/config/usb_cam_2.yaml"/>
    </include>
    <include file="$(find camera_test)/launch/continuous_detection.launch">
        <arg name="camera_name"  value="$(arg camera_name_2)"/>
        <arg name="camera_frame" value="$(arg camera_name_2)"/>
        <arg name="publish_tf"   value="$(arg publish_tf)"/>
        <arg name="tags_file"    value="$(arg tags_file)"/>
    </include>

    <!-- world → tabletop -->
    <node pkg="tf" type="static_transform_publisher" name="tabletop_broadcaster"
          args="0 0 0 0 0 0 1 tabletop world 100"/>

    <!-- cam2 → cam1 (set real extrinsics here) -->
    <node pkg="tf" type="static_transform_publisher" name="cam2_to_cam1"
          args="0.1 0 0 0 0 0 1 
                usb_cam_2_rgb_camera_optical_frame 
                usb_cam_1_rgb_camera_optical_frame 100"/>

    <!-- set up the visualizer -->
    <node pkg="camera_test" type="tag_detection_merger.py" name="tag_detection_merger" output="screen"/>

    <!-- visualizer now listens on /merged_tag_detections -->
    <node pkg="camera_test" type="visualizer.py"      name="visualizer"      output="screen"/>

    <!-- display the cube -->
    <param name="small_cube_description" textfile="$(find camera_test)/assets/small_cube.urdf"/>
    <node  pkg="robot_state_publisher" type="robot_state_publisher" name="small_cube_state_publisher">
        <remap from="robot_description" to="small_cube_description"/>
        <remap from="joint_states"    to="small_cube_joint_states"/>
    </node>

    <!-- rviz (optional) -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find camera_test)/rviz/default.rviz"/>
</launch>